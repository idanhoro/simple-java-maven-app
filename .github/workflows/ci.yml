name: Build and Test

on:
  push:
    branches:
      - development

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Bump version and push tag
        id: bump_version
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.0.0
          DEFAULT_BUMP: patch
        with:
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          release_branches: 'master'

      - name: Set tag version as environment variable
        run: echo "TAG_VERSION=${{ steps.bump_version.outputs.new_tag }}" >> $GITHUB_ENV

      - name: Update version in pom.xml
        run: |
          mvn versions:set -DnewVersion=${{ steps.bump_version.outputs.new_tag }}
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -a -m "Update version in pom.xml" --author='github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
          git push origin development


      - name: Validate and Test with Maven
        run: mvn -B package --file pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          load: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simple-java-maven-app:${{ steps.bump_version.outputs.new_tag }}

      - name: Test Docker image
        run: |
          docker run -d -p 8080:8080 --name my-app ${{ secrets.DOCKER_HUB_USERNAME }}/simple-java-maven-app:${{ steps.bump_version.outputs.new_tag }}
          sleep 5  
          [ "$(docker logs my-app)" == "Hello World!" ] || exit 1
          # docker ps 
          # docker logs my-app || true 
          docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/simple-java-maven-app:${{ steps.bump_version.outputs.new_tag }}
          docker rm my-app
          docker stop my-app || true

      - name: Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simple-java-maven-app:${{ steps.bump_version.outputs.new_tag }}

      - name: Create PR
        if: success()
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "master"
          pr_title: "CI updates"
          pr_body: "Updates from CI"
          github_token: ${{ secrets.GITHUB_TOKEN }}
